import 'package:hive/hive.dart';
import 'package:cloud_firestore/cloud_firestore.dart'; // For Timestamp

part 'expenseModel.g.dart'; // This file will be generated by build_runner

@HiveType(typeId: 5) // Unique typeId for each HiveObject
class expenseModel extends HiveObject {
  @HiveField(0)
  double amount;

  @HiveField(1)
  int date; // Day of the month

  @HiveField(2)
  String id;

  @HiveField(3)
  String? description;

  @HiveField(4)
  String? category;

  @HiveField(5)
  String? type; // 'expense' or 'income'

  @HiveField(6)
  DateTime? timestamp; // Store as DateTime for Hive compatibility

  expenseModel({
    required this.amount,
    required this.date,
    required this.id,
    this.description,
    this.category,
    this.type,
    this.timestamp,
  });

  // Factory constructor to create from Firestore data
  factory expenseModel.fromFirestore(DocumentSnapshot doc) {
    Map<String, dynamic> data = doc.data()! as Map<String, dynamic>;
    Timestamp? firestoreTimestamp = data["timestamp"] as Timestamp?;
    return expenseModel(
      amount: (data["type"] as String?) == 'expense'
          ? -1 * (data["amount"] as num).toDouble()
          : (data["amount"] as num).toDouble(),
      date: (data["date"] as num).toInt(),
      id: doc.id,
      description: data["description"] as String?,
      category: data["category"] as String?,
      type: data["type"] as String?,
      timestamp: firestoreTimestamp?.toDate(), // Convert Firestore Timestamp to DateTime
    );
  }

  // Method to convert to a map for Firestore
  Map<String, dynamic> toFirestoreMap() {
    return {
      "amount": type == 'expense' ? amount.abs() : amount, // Store positive amount
      "date": date,
      "description": description,
      "category": category,
      "type": type,
      // Let Firestore handle the timestamp on create/update for server-side consistency
      // "timestamp": timestamp != null ? Timestamp.fromDate(timestamp!) : FieldValue.serverTimestamp(),
      "expenseId": id,
      // monthYear is part of collection path, not usually in doc
    };
  }
}